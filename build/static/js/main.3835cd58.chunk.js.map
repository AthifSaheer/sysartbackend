{"version":3,"sources":["logo.svg","Component/Navbar/Navbar.js","Component/Table/Table.js","Component/Signup/Signup.js","Component/Home/Home.js","Component/Login/Login.js","App.js","index.js"],"names":["NavbarX","props","useHistory","className","onClick","reactLocalStorage","remove","setComponent","useStyles","makeStyles","table","minWidth","createData","name","calories","fat","carbs","protein","DenseTable","useState","studentData","setStudentData","serverDown","setServerDown","useEffect","code","get","axios","then","res","console","log","data","catch","error","style","width","textAlign","map","id","age","gender","address","Yup","shape","username","min","max","required","password","confirmPassword","Signup","email","setEmail","emailRequired","setEmailRequired","mustBeEmail","setMustBeEmail","setUsername","usernameRequired","setUsernameRequired","setPassword","passwordRequired","setPasswordRequired","setConfirmPassword","confirmPasswordRequired","setConfirmPasswordRequired","pwordDidNotMatch","setPwordDidNotMatch","setCode","codeRequired","setCodeRequired","usernameAlreadyExists","setUsernameAlreadyExists","justifyContent","alignItems","display","marginBottom","fontSize","type","placeholder","value","onChange","e","target","htmlFor","includes","signupData","post","set","color","Home","component","Login","invalidCredentials","setInvalidCredentials","loginData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3835cd58.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {reactLocalStorage} from 'reactjs-localstorage';\nimport { useHistory } from 'react-router-dom'\nimport React from 'react'\nimport axios from 'axios'\n\nimport './Navbar.css'\n\nfunction NavbarX(props) {\n    const history = useHistory()\n    \n    function logoutFunc() {\n        reactLocalStorage.remove('logintoken');\n        reactLocalStorage.remove('code');\n        props.setComponent(\"login\")\n    }\n\n    return (\n        <div className=\"navbar__main\">\n    \n            <div className=\"comany_txt\">\n                <h5>SYSART</h5>\n            </div>\n            <div className=\"middle_div\"></div>\n            <div className=\"logout_btn\">\n                <button onClick={logoutFunc}>Logout</button>\n            </div>\n    \n        </div>\n    )\n}\n\nexport default NavbarX\n","import React, { useEffect, useState } from 'react'\nimport {reactLocalStorage} from 'reactjs-localstorage';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default function DenseTable() {\n    const [studentData, setStudentData] = useState([])\n    const [serverDown, setServerDown] = useState(false)\n\n    useEffect(() => {\n        let code = reactLocalStorage.get('code')\n        axios.get(`http://127.0.0.1:8000/api/v1/home/${code}/`)\n        .then((res) => {\n            console.log('----Succes-------', res.data)\n            setStudentData(res.data)\n        })\n        .catch(error => {\n            console.log('---Error--------', error.data)\n            setServerDown(true)\n        })\n\n    }, [])\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"home_main_div\">\n            {serverDown? \n                <p className=\"server_down_text_danger\">Server Down !</p>\n            :\n                <div className=\"main_div\">\n                    <div className=\"student_table_start\"></div>\n                    <div className=\"student_table\">\n\n                        <p>STUDENTS</p>\n                        <table style={{ width: '99%'}}>\n                            <thead>\n                                <tr>\n                                    <th>ID</th> \n                                    <th>Name</th>\n                                    <th>Age</th>\n                                    <th>Gender</th>\n                                    <th>Address</th>\n                                </tr>\n                            </thead>\n                            \n                            <tbody style={{ textAlign: 'center' }}>\n                                {studentData.map((data) => {\n                                    return(\n                                        <tr key={data.id}>\n                                            <td>{data.id}</td> \n                                            <td>{data.name}</td>\n                                            <td>{data.age}</td>\n                                            <td>{data.gender}</td>\n                                            <td>{data.address}</td>\n                                        </tr>\n                                    )\n                                })}\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            }\n        </div>\n\n  );\n}","import React, {useState, useEffect} from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\nimport '../Login/Login.css'\nimport Login from '../Login/Login'\n\nconst SignupSchema = Yup.object().shape({\n    username: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Required'),\n    password: Yup.string()\n      .min(6, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Required'),\n    confirmPassword: Yup.string()\n      .min(6, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Required'),\n    // email: Yup.string().email('Invalid email').required('Required'),\n  });\n\nfunction Signup(props) {\n    const [email, setEmail] = useState('')\n    const [emailRequired, setEmailRequired] = useState(false)\n    const [mustBeEmail, setMustBeEmail] = useState(false)\n\n    const [username, setUsername] = useState('')\n    const [usernameRequired, setUsernameRequired] = useState(false)\n\n    const [password, setPassword] = useState('')\n    const [passwordRequired, setPasswordRequired] = useState(false)\n\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [confirmPasswordRequired, setConfirmPasswordRequired] = useState(false)\n\n    const [pwordDidNotMatch, setPwordDidNotMatch] = useState(false)\n    \n    const [code, setCode] = useState('')\n    const [codeRequired, setCodeRequired] = useState(false)\n\n    const [serverDown, setServerDown] = useState(false)\n\n    const [usernameAlreadyExists, setUsernameAlreadyExists] = useState(false)\n\n    const history = useHistory()\n\n    const registerBtn = () => {\n        if(email == '' && password == '' && confirmPassword == '') {\n            setEmailRequired(true)\n            setPasswordRequired(true)\n            setConfirmPasswordRequired(true)\n            setUsernameRequired(true)\n            setCodeRequired(true)\n        } else {\n            if(username == '') {\n                setUsernameRequired(true)\n            } else {\n                setUsernameRequired(false)\n            }\n\n            if(email == '') {\n                setEmailRequired(true)\n            } else {\n                if (email.includes('@')) {\n                    setMustBeEmail(false)\n                    setEmailRequired(false)\n                } else {\n                    setMustBeEmail(true)\n                }\n            }\n    \n            if(password == '') {\n                setPasswordRequired(true)\n            }else {\n                setPasswordRequired(false)\n            }\n\n            if(confirmPassword == '') {\n                setPasswordRequired(true)\n            }else {\n                setPasswordRequired(false)\n            }\n\n            if(password != confirmPassword) {\n                console.log(\"password:\", password)\n                console.log(\"confirmPassword:\", confirmPassword)\n                setPwordDidNotMatch(true)\n            } else {\n                setPwordDidNotMatch(false)\n            }\n\n            if(code == '') {\n                setCodeRequired(true)\n            } else {\n                setCodeRequired(false)\n            }\n        }\n\n        \n        if (username && email && password && password && code && password == confirmPassword &&  email.includes('@')) {\n            let signupData = {'username': username, 'email': email, 'password': password, 'code': code};\n\n            axios.post('http://127.0.0.1:8000/api/v1/register/account/', signupData)\n            .then((res) => {\n                if (res.data['already exist']) {\n                    setUsernameAlreadyExists(true)\n                } else {\n                    reactLocalStorage.set('logintoken', res.data['key']);\n                    reactLocalStorage.set('code', code);\n                    props.setComponent(\"home\")\n                }\n            } )\n            .catch(error => setServerDown(true))\n        }\n        \n    }\n\n    useEffect(() => {\n        if(reactLocalStorage.get('logintoken')) {\n            props.setComponent(\"home\")\n        }\n    }, [])\n\n    let serverDownStyle = {\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        marginBottom: '10px',\n        fontSize: '22px',\n    }\n\n    return (\n        <div>\n            <div className=\"main-div\">\n                <div>\n                    <div className=\"login_container\">\n                        <h1 className=\"login-text\">Sign Up</h1>\n\n                        {serverDown?\n                            <span className=\"text-danger\" style={serverDownStyle}>Server Down!</span>\n                        :\n                            null\n                        }\n\n                        <div className=\"login-div\">\n                            {/* Username */}\n                            <input type=\"text\" name=\"username\" className=\"form-control username-input\" placeholder=\"Username\"\n                            value={username} onChange={e => setUsername(e.target.value)}\n                            />\n                            {usernameRequired?\n                                <span className=\"text-danger\">This field is required</span>\n                            :\n                                null\n                            }\n\n                            <br />\n                            <br />\n\n                            <input type=\"email\" name=\"email\" className=\"form-control username-input\" placeholder=\"Email\"\n                            value={email} onChange={e => setEmail(e.target.value)}\n                            />\n                            {emailRequired?\n                                <span className=\"text-danger\">This field is required</span>\n                            :\n                                null\n                            }\n\n                            {mustBeEmail?\n                                <span className=\"text-danger\">This field must be an email !</span>\n                            :\n                                null\n                            }\n\n                            <br />\n                            <br />\n\n                            {/* Password */}\n                            <input type=\"password\" name=\"password\" className=\"form-control password-input\" id=\"exampleInputPassword1\" placeholder=\"Password\" \n                            value={password} onChange={e => setPassword(e.target.value)}\n                            \n                            />\n                            {passwordRequired?\n                                <span className=\"text-danger\">This field is required</span>\n                            :\n                                null\n                            }\n\n                            <br />\n                            <br />\n\n                            {/* Confirm Password */}\n                            \n                            <input type=\"password\" name=\"confirmPassword\" className=\"form-control password-input\" id=\"exampleInputPassword2\" placeholder=\"Confirm password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} />\n\n                            {confirmPasswordRequired?\n                                <span className=\"text-danger\">This field is required</span>\n                            :\n                                null\n                            }\n\n                            {usernameAlreadyExists?\n                                <span className=\"text-danger\">Username already exists!</span>\n                                :\n                                null\n                            }\n\n                            {pwordDidNotMatch?\n                                <span className=\"text-danger\">Password did not match!</span>\n                            :\n                                null\n                            }\n\n                            <br />\n                            <br />\n\n                            <label htmlFor=\"code\">Choose Code:</label>\n                            <select name=\"code\" id=\"code\" onChange={e => setCode(e.target.value)} className=\"input-error\">\n                                <option value=\"\">-----------</option>\n                                <option value=\"sysarta\">A</option>\n                                <option value=\"sysartb\">B</option>\n                            </select>\n\n                            <br />\n\n                            {codeRequired?\n                                <span className=\"text-danger\">This field is required</span>\n                            :\n                                null\n                            }\n                            <br />\n\n                            {/* Login/Register Button */}\n                            <button onClick={registerBtn} type=\"submit\" className=\"login-btn\">Register</button>\n\n                            <p className=\"or_log_signup_txt\">or <span style={{ color: '#1890ff'}} onClick={() => props.setComponent(\"login\")}> login now!</span></p>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup\n","import React, { useEffect, useState } from 'react'\nimport {reactLocalStorage} from 'reactjs-localstorage';\nimport { useHistory } from 'react-router-dom'\n\nimport Navbar from '../Navbar/Navbar'\nimport Table from '../Table/Table'\nimport Login from '../Login/Login'\nimport Signup from '../Signup/Signup'\n\nimport './Home.css'\n\nfunction Home() {\n    const [component, setComponent] = useState(\"home\")\n    const history = useHistory()\n\n    useEffect(() => {\n        if(!reactLocalStorage.get('logintoken')) {\n            setComponent(\"login\")\n        }\n    }, [])\n\n    return (\n        <div>\n            {component == \"home\"?\n                <div>\n                    <Navbar setComponent={setComponent} />\n                    <Table />\n                </div>\n            :\n                component == \"login\"?\n                    <Login setComponent={setComponent} />\n                :\n                    component == \"signup\"?\n                        <Signup setComponent={setComponent} />\n                    :\n                        null\n            }\n        </div>\n    )\n}\n\nexport default Home\n","import React, {useState, useEffect} from 'react'\nimport {reactLocalStorage} from 'reactjs-localstorage';\nimport axios from 'axios';\n\nimport './Login.css'\nimport Home from '../Home/Home'\n\nfunction Login(props) {\n    const [email, setEmail] = useState('')\n    const [emailRequired, setEmailRequired] = useState(false)\n    const [mustBeEmail, setMustBeEmail] = useState(false)\n\n    const [password, setPassword] = useState('')\n    const [passwordRequired, setPasswordRequired] = useState(false)\n\n    const [invalidCredentials, setInvalidCredentials] = useState(false)\n    \n    const [code, setCode] = useState('')\n    const [codeRequired, setCodeRequired] = useState(false)\n    \n    const [serverDown, setServerDown] = useState(false)\n\n\n    const loginBtn = () => {\n        if(email == '' && password == '' && code == '') {\n            setEmailRequired(true)\n            setPasswordRequired(true)\n            setCodeRequired(true)\n        } else {\n            if(email == '') {\n                setEmailRequired(true)\n            } else {\n                if (email.includes('@')) {\n                    setMustBeEmail(false)\n                    setEmailRequired(false)\n                } else {\n                    setMustBeEmail(true)\n                }\n            }\n    \n            if(password == '') {\n                setPasswordRequired(true)\n            }else {\n                setPasswordRequired(false)\n            }\n\n            if(code == '') {\n                setCodeRequired(true)\n            }else {\n                setCodeRequired(false)\n            }\n        }\n\n        \n        if (email && password && code && email.includes('@')) {\n            let loginData = {'email': email, 'password': password, 'code': code};\n            \n            axios.post('http://127.0.0.1:8000/api/v1/login/', loginData)\n            .then((res) => {\n                console.log('-----------', res.data);\n                if (res.data['nouser']) {\n                    setInvalidCredentials(true)\n                } else {\n                    reactLocalStorage.set('logintoken', res.data['key']);\n                    reactLocalStorage.set('code', code);\n                    props.setComponent(\"home\")\n                }\n            } )\n            .catch(error => setServerDown(true))\n        }\n    }\n\n    useEffect(() => {\n        if(reactLocalStorage.get('logintoken')) {\n            props.setComponent(\"home\")\n        }\n    }, [])\n\n    let serverDownStyle = {\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        marginBottom: '10px',\n        fontSize: '22px',\n    }\n\n    return (\n        <div>\n            <div className=\"main-div\">\n                <div>\n                    <div className=\"login_container\">\n                        <h1 className=\"login-text\">Log In</h1>\n                        \n                        {serverDown?\n                            <span className=\"text-danger\" style={serverDownStyle}>Server Down!</span>\n                        :\n                            null\n                        }\n\n                        <div className=\"login-div\">\n\n                            {/* Email */}\n                            <input type=\"email\" className=\"form-control username-input\" placeholder=\"Email\"\n                            value={email} onChange={e => setEmail(e.target.value)} required\n                            />\n                            \n                            {emailRequired?\n                                <span className=\"text-danger\">This field is required</span>\n                            :\n                                null\n                            }\n\n                            {mustBeEmail?\n                                <span className=\"text-danger\">This field must be an email !</span>\n                            :\n                                null\n                            }\n\n                            <br />\n                            <br />\n\n                            {/* Password */}\n                            <input type=\"password\" className=\"form-control password-input\" id=\"exampleInputPassword1\" placeholder=\"Password\" \n                            value={password} onChange={e => setPassword(e.target.value)}\n                            \n                            />\n                            {passwordRequired?\n                                <span className=\"text-danger\">This field is required</span>\n                            :\n                                null\n                            }\n\n                            <br />\n                            <br />\n\n                            <label htmlFor=\"code\">Choose Code:</label>\n                            <select name=\"code\" id=\"code\" onChange={e => setCode(e.target.value)} className=\"input-error\">\n                                <option value=\"\">-------</option>\n                                <option value=\"sysarta\">A</option>\n                                <option value=\"sysartb\">B</option>\n                            </select>\n\n                            <br />\n\n                            {codeRequired?\n                                <span className=\"text-danger\">This field is required</span>\n                            :\n                                null\n                            }\n                            <br />\n                            \n                            {invalidCredentials?\n                                <span className=\"text-danger\">Invalid credentials !</span>\n                            :\n                                null\n                            }\n\n                            <button onClick={loginBtn} type=\"submit\" className=\"login-btn\">Login</button>\n                            \n                            <p className=\"or_log_signup_txt\">or <span style={{ color: '#1890ff' }} onClick={() => props.setComponent(\"signup\")} > register now!</span></p>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Component/Login/Login'\nimport Home from './Component/Home/Home'\nimport Signup from './Component/Signup/Signup'\n\nfunction App() {\n  const [component, setComponent] = useState(\"\")\n\n  useEffect(() => {\n    setComponent(reactLocalStorage.get('component'))\n  }, [reactLocalStorage.get('component')])\n\n  return (\n    <div className=\"App\">\n      <Home />\n      {/* { reactLocalStorage.get('component') == \"home\"? \n      :\n        reactLocalStorage.get('component') == \"login\"?\n          <Login />\n        :\n          <Signup />\n      } */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport Login from './Component/Login/Login'\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}